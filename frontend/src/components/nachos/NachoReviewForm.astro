---
---

<form class="review-form" id="nacho-review-form">
    <div class="form-group">
        <label for="restaurant_name">Restaurant Name</label>
        <input type="text" id="restaurant_name" name="restaurant_name" required>
    </div>

    <div class="ratings-group">
        <div class="form-group">
            <label for="cheese_rating">Cheese Rating</label>
            <input type="number" id="cheese_rating" name="cheese_rating" min="1" max="5" step="0.5" required>
        </div>

        <div class="form-group">
            <label for="crispiness_rating">Crispiness Rating</label>
            <input type="number" id="crispiness_rating" name="crispiness_rating" min="1" max="5" step="0.5" required>
        </div>

        <div class="form-group">
            <label for="topping_quality">Topping Quality</label>
            <input type="number" id="topping_quality" name="topping_quality" min="1" max="5" step="0.5" required>
        </div>

        <div class="form-group">
            <label for="overall_rating">Overall Rating</label>
            <input type="number" id="overall_rating" name="overall_rating" min="1" max="5" step="0.5" required>
        </div>
    </div>

    <div class="form-group">
        <label for="price">Price ($)</label>
        <input type="number" id="price" name="price" min="0" step="0.01" required>
    </div>

    <div class="form-group">
        <label for="review_text">Review</label>
        <textarea id="review_text" name="review_text" rows="4" required></textarea>
    </div>

    <div class="form-group">
        <label for="reviewer_name">Your Name</label>
        <input type="text" id="reviewer_name" name="reviewer_name" required>
    </div>

    <button type="submit" class="submit-button">Submit Review</button>
</form>

<script>
    const form = document.getElementById('nacho-review-form');
    
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(form);
        const reviewData = Object.fromEntries(formData.entries());
        
        // Convert numeric fields from strings
        ['cheese_rating', 'crispiness_rating', 'topping_quality', 'overall_rating', 'price'].forEach(field => {
            reviewData[field] = parseFloat(reviewData[field]);
        });

        try {
            const response = await fetch('http://localhost:8000/api/nacho-reviews/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(reviewData)
            });

            if (!response.ok) {
                throw new Error('Failed to submit review');
            }

            alert('Review submitted successfully! It will be visible after approval.');
            form.reset();
        } catch (error) {
            console.error('Error submitting review:', error);
            alert('Failed to submit review. Please try again.');
        }
    });
</script>

<style>
    .review-form {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .ratings-group {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
    }

    input, textarea {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
    }

    input[type="number"] {
        width: 100px;
    }

    textarea {
        resize: vertical;
    }

    .submit-button {
        background: var(--accent);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.2s;
    }

    .submit-button:hover {
        background: var(--accent-dark, #0056b3);
    }
</style> 